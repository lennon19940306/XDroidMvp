apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
version = '1.6.41' // 版本
group = rootProject.groupId
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }
}
dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')

    api rootProject.ext.dependencies["xdroid-mvp"]

    api rootProject.ext.dependencies["PersistentCookieJar"]
    api rootProject.ext.dependencies["qiujuer-ui"]
    api rootProject.ext.dependencies["multidex"]
    api rootProject.ext.dependencies["exifinterface"]
    api rootProject.ext.dependencies["constraintlayout"]

    api rootProject.ext.dependencies["navigation-fragment-ktx"]
    api rootProject.ext.dependencies["navigation-ui-ktx"]
    api rootProject.ext.dependencies["navigation-ui"]
    api rootProject.ext.dependencies["navigation-fragment"]
}

// 生成sourceJar和javaDocJar构件
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
//apply from:'uploadLocal.gradle'
//apply from:'uploadAliRelease.gradle'
apply from:'uploadAliSnapshot.gradle'