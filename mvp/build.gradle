apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

//apply plugin: 'com.novoda.bintray-release'
//
//publish {
//    artifactId = 'xdroid-mvp'  // artifactId
//    uploadName = 'XDroidMvp' // 展示名字
//    publishVersion = '1.1.9' // 版本
//    userOrg = rootProject.ext.userOrg
//    groupId =rootProject.ext.groupId
//    repoName = rootProject.ext.repoName
//    desc = ''
//    website = rootProject.ext.website
//    licences = rootProject.ext.licences
//}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api rootProject.ext.dependencies["appcompat-v7"]
    api rootProject.ext.dependencies["support-v4"]
    api rootProject.ext.dependencies["design"]
    api rootProject.ext.dependencies["annotations"]
    api rootProject.ext.dependencies["recyclerview-v7"]

    api rootProject.ext.dependencies["xrecyclerview"]

    api rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    kapt rootProject.ext.dependencies["glide-compiler"]

    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["retrofit-converter-gson"]
    api rootProject.ext.dependencies["retrofit-adapter-rxjava"]
    api rootProject.ext.dependencies["okhttp3"]
    api rootProject.ext.dependencies["rxbus"]

    api rootProject.ext.dependencies["rxlifecycle"]
    api rootProject.ext.dependencies["rxlifecycle-android"]
    api rootProject.ext.dependencies["rxlifecycle-components"]
    api rootProject.ext.dependencies["rxpermissions"]

    api rootProject.ext.dependencies["kotlin"]

    api rootProject.ext.dependencies["nativelogger"]
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 生成sourceJar和javaDocJar构件
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
